module.exports.output = {
   start: [
   'const Realm = require("realm");\n',
   'const inquirer = require("inquirer");\n',
   'const users = require("./users");\n',
   'const schemas = require("./schemas");\n',
   'const output = require("../output");\n',
   '\n',
   'Realm.Sync.setLogLevel("error");\n',
   '\n',
   'let realm;\n',
   'async function openRealm() {\n',
   '  const config = {\n',
   '    schema: [schemas.TaskSchema, schemas.UserSchema, schemas.ProjectSchema],\n',
   '    sync: {\n',
   '      // This comment should be in both outputs.\n',
   '      // There are 3 codeblocks that follow, each testing a different\n',
   '      // way to comment.\n',
   '\n',
   '       // A You should only see this in the start code\n',
   '       start: true,\n',
   '       final: false,\n',
   '       // comment in start code: ... ,\n',
   '\n',
   '      // B You should only see this in the start code\n',
   '      start: true,\n',
   '      final: false,\n',
   '      // comment in start code: ... ,\n',
   '\n',
   '       // C You should only see this in the start code\n',
   '       start: true,\n',
   '       final: false,\n',
   '       // comment in start code: ... ,\n',
   '    },\n',
   '  };\n',
   '  realm = Realm.open(config);\n',
   '}\n',
   '\n',
   'output.intro();\n',
   '\n',
   'async function run() {\n',
   '  console.log("*** WELCOME ***");\n',
   '  console.log(\n',
   '    "Please log in to your Realm account or register as a new user."\n',
   '  );\n',
   '\n',
   '  let choice = await inquirer.prompt([\n',
   '    {\n',
   '      type: "rawlist",\n',
   '      name: "start",\n',
   '      message: "What do you want to do?",\n',
   '      choices: ["Log in", "Register as a new user"],\n',
   '    },\n',
   '  ]);\n',
   '\n',
   '  if (choice.start === "Log in") {\n',
   '    users.logIn();\n',
   '  } else {\n',
   '    users.registerUser();\n',
   '  }\n',
   '}\n',
   '\n',
   'run().catch((err) => {\n',
   '  output.error(err.message);\n',
   '});\n',
   '\n',
   'async function getRealm() {\n',
   '  if (realm == undefined) {\n',
   '    await openRealm();\n',
   '  }\n',
   '  return realm;\n',
   '}\n',
   '\n',
   'async function closeRealm() {\n',
   '  if (realm != undefined) {\n',
   '    realm.close();\n',
   '    realm = undefined;\n',
   '  }\n',
   '}\n',
   '\n',
   'exports.getRealm = getRealm;\n',
   'exports.closeRealm = closeRealm;\n',
   'exports.run = run;\n',
   ''
 ], final: [
   'const Realm = require("realm");\n',
   'const inquirer = require("inquirer");\n',
   'const users = require("./users");\n',
   'const schemas = require("./schemas");\n',
   'const output = require("../output");\n',
   '\n',
   'Realm.Sync.setLogLevel("error");\n',
   '\n',
   'let realm;\n',
   'async function openRealm() {\n',
   '  const config = {\n',
   '    schema: [schemas.TaskSchema, schemas.UserSchema, schemas.ProjectSchema],\n',
   '    sync: {\n',
   '      // This comment should be in both outputs.\n',
   '      // There are 3 codeblocks that follow, each testing a different\n',
   '      // way to comment.\n',
   '\n',
   '\n',
   '      notInStartCode: true,\n',
   '      inFinalCode: true,\n',
   '\n',
   '\n',
   '      notInStartCode: true,\n',
   '      inFinalCode: true,\n',
   '\n',
   '      notInStartCode: true,\n',
   '      inFinalCode: true,\n',
   '    },\n',
   '  };\n',
   '  realm = Realm.open(config);\n',
   '}\n',
   '\n',
   'output.intro();\n',
   '\n',
   'async function run() {\n',
   '  console.log("*** WELCOME ***");\n',
   '  console.log(\n',
   '    "Please log in to your Realm account or register as a new user."\n',
   '  );\n',
   '\n',
   '  let choice = await inquirer.prompt([\n',
   '    {\n',
   '      type: "rawlist",\n',
   '      name: "start",\n',
   '      message: "What do you want to do?",\n',
   '      choices: ["Log in", "Register as a new user"],\n',
   '    },\n',
   '  ]);\n',
   '\n',
   '  if (choice.start === "Log in") {\n',
   '    users.logIn();\n',
   '  } else {\n',
   '    users.registerUser();\n',
   '  }\n',
   '}\n',
   '\n',
   'run().catch((err) => {\n',
   '  output.error(err.message);\n',
   '});\n',
   '\n',
   'async function getRealm() {\n',
   '  if (realm == undefined) {\n',
   '    await openRealm();\n',
   '  }\n',
   '  return realm;\n',
   '}\n',
   '\n',
   'async function closeRealm() {\n',
   '  if (realm != undefined) {\n',
   '    realm.close();\n',
   '    realm = undefined;\n',
   '  }\n',
   '}\n',
   '\n',
   'exports.getRealm = getRealm;\n',
   'exports.closeRealm = closeRealm;\n',
   'exports.run = run;\n',
   ''
 ]
};